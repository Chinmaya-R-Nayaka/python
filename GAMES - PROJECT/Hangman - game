import random

def display_hangman(incorrect_guesses):
    """
    Displays the HANGMAN header and pointer position.
    """
    header = "HANGMAN"
    pointer_position = min(incorrect_guesses, len(header) - 1)
    pointer = " " * pointer_position + "^"
    print(header)
    print(pointer)


def select_word(word_list):
    """
    Randomly selects a word from the provided list.
    """
    return random.choice(word_list)


def display_word_progress(word, guessed_letters):
    """
    Displays the current progress of the word with guessed letters.
    """
    return " ".join(letter if letter in guessed_letters else "_" for letter in word)


def play_game():
    """
    Implements the Hangman game logic.
    """
    # List of predefined words
    word_list = ["algorithm", "function", "variable", "compile", 
                 "iterate", "recursion", "binary", "array", 
                 "syntax", "pointer"]

    word_to_guess = select_word(word_list)
    guessed_letters = set()
    incorrect_guesses = 0
    max_incorrect_guesses = len("HANGMAN") - 1

    print("Welcome to Hangman!")

    while incorrect_guesses < max_incorrect_guesses:
        display_hangman(incorrect_guesses)
        print("Word: ", display_word_progress(word_to_guess, guessed_letters))
        print(f"Guessed letters: {', '.join(sorted(guessed_letters)) if guessed_letters else 'None'}")

        guess = input("Guess a letter: ").lower()

        # Input validation
        if len(guess) != 1 or not guess.isalpha():
            print("Invalid input. Please enter a single alphabetic character.")
            continue

        if guess in guessed_letters:
            print(f"You've already guessed '{guess}'. Try a different letter.")
            continue

        guessed_letters.add(guess)

        if guess in word_to_guess:
            print(f"Good guess! '{guess}' is in the word.")
        else:
            print(f"Wrong guess! '{guess}' is not in the word.")
            incorrect_guesses += 1

        # Check if the player has guessed the entire word
        if all(letter in guessed_letters for letter in word_to_guess):
            print("Phewâ€¦ you are saved!")
            print(f"The word was: {word_to_guess}")
            break
    else:
        display_hangman(incorrect_guesses)
        print("You are hanged!")
        print(f"The word was: {word_to_guess}")

    # Ask the player if they want to play again
    play_again = input("Do you want to play again? (yes/no): ").strip().lower()
    if play_again == "yes":
        play_game()
    else:
        print("Thanks for playing! Goodbye.")


if __name__ == "__main__":
    play_game()
